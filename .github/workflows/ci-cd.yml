name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      # Step 3: Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Build the project
      - name: Build with Maven
        run: mvn clean install

      # Step 5: Run tests
      - name: Run tests
        run: mvn test

  test-endpoint:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      # Step 3: Build the project
      - name: Build with Maven
        run: mvn clean package

      # Step 4: Start the Spring Boot application
      - name: Start Spring Boot application
        run: |
          nohup java -jar target/*.jar &
          sleep 20

      # Step 5: Test the /ask-ai endpoint
      - name: Test /ask-ai endpoint
        run: |
          RESPONSE=$(curl -s -G --data-urlencode "prompt=Hello AI" http://localhost:8080/ask-ai)
          echo "Response: $RESPONSE"
          if [[ -z "$RESPONSE" ]]; then
            echo "Endpoint test failed!"
            exit 1
          fi
